############################################################
##    FILENAME:   util.py    
##    VERSION:    1.0
##    SINCE:      2014-05-06
##    AUTHOR: 
##        Jimmy Lin (xl5224) - JimmyLin@utexas.edu  
##
############################################################
##    Edited by MacVim
##    Documentation auto-generated by Snippet 
############################################################

from HTMLParser import HTMLParser
import sys

class MLStripper(HTMLParser):
	def __init__(self):
		self.reset()
		self.fed = []
	def handle_data(self, d):
		self.fed.append(d)
	def get_data(self):
		return ''.join(self.fed)

def strip_tags(htmlstr):
    """
    Remove all html tags
    """

    s = MLStripper()
    s.feed(htmlstr)
    return s.get_data()

def strip_escapse(string):
    """
    Remove all unexpected escape
    """
    delete_list = ["\\r", "\\n", "\\r\\n", "\\t", "\\\r", "\\\n"]
    
    tmp = string
    for escape in delete_list:
        tmp = tmp.strip(escape)

    return tmp

class ProgressBar ():
    def __init__ (self, task_size, bar_length=50):
        self.total_length = bar_length
        self.abs_value = 0
        self.rel_value = 0.0
        self.task_size = task_size
        self.bar_length = bar_length
        self.FORMAT = "%d, %d%% [[%s]] \r"

    def update (self, abs_value):
        self.abs_value = abs_value
        self.rel_value = 100.0 * abs_value / self.task_size
        hash_repeat = int(self.rel_value / (100.0/self.bar_length))
        whitespace_repeat = self.bar_length - hash_repeat
        self.progress = "#" * hash_repeat + "->" + " " * whitespace_repeat

    def display (self):
        string = self.FORMAT % (int(self.abs_value), int(self.rel_value), self.progress)
        sys.stdout.write(string)
        sys.stdout.flush()
    
